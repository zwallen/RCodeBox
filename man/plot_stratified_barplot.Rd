% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/plot_stratified_barplot.R
\name{plot_stratified_barplot}
\alias{plot_stratified_barplot}
\title{Create a stratified bar plot}
\usage{
plot_stratified_barplot(data, var, strata, case_id, fill_color, xlab = NULL)
}
\arguments{
\item{data}{A data.frame containing the variables of interest.}

\item{var}{Character string. The name of the categorical variable in \code{data}
to be plotted on the y-axis as frequencies.}

\item{strata}{Character string. The name of the categorical variable in \code{data}
to stratify by, displayed on the x-axis.}

\item{case_id}{Character string. The name of the column in \code{data} used as
the case identifier for counting observations.}

\item{fill_color}{Named character vector or character vector. Color specification
for the bars. Can be a named vector mapping variable categories to colors, or
a character vector of colors.}

\item{xlab}{Character string, optional. The label for the x-axis. If not provided,
it defaults to the name of the \code{strata} variable with underscores replaced
by spaces.}
}
\value{
A ggplot object containing the stratified bar plot with:
\itemize{
\item Bars showing frequency distribution of \code{var} across \code{strata} categories
\item An 'All cases' group for comparison
\item Frequency percentages displayed above bars
\item Sample counts (N=x) displayed below x-axis
\item Dodged bar positioning for multiple categories
}
}
\description{
Creates a stratified bar plot showing the frequency distribution of a categorical
variable across different strata, including an 'All cases' comparison group.
}
\details{
Missing values in \code{var} are automatically filtered out before plotting.
An error will occur if no data is left after filtering. Both \code{var} and
\code{strata} variables are converted to factors if they are not already.
}
\examples{
# Create sample data
set.seed(123)
sample_data <- data.frame(
  patient_id = 1:200,
  treatment = factor(sample(c("A", "B", "Control"), 200, replace = TRUE)),
  outcome = factor(sample(c("Success", "Failure"), 200, replace = TRUE)),
  hospital = factor(sample(c("Hospital1", "Hospital2", "Hospital3"), 200, replace = TRUE))
)

# Basic usage
p1 <- plot_stratified_barplot(
  data = sample_data,
  var = "outcome",
  strata = "treatment",
  case_id = "patient_id",
  fill_color = c("Success" = "lightgreen", "Failure" = "lightcoral")
)
print(p1)

# With custom x-axis label
p2 <- plot_stratified_barplot(
  data = sample_data,
  var = "outcome",
  strata = "hospital",
  case_id = "patient_id",
  fill_color = c("lightblue", "orange"),
  xlab = "Medical Center"
)
print(p2)

}
