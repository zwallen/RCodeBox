% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/diffGLMM.R
\name{diffGLMM}
\alias{diffGLMM}
\title{Differential abundance testing using generalized linear mixed models}
\usage{
diffGLMM(
  feats,
  samps,
  fixed_formula,
  min_prevalence = 0.1,
  normalization = "tss",
  transformation = "log",
  random_formula = NULL,
  family = "gaussian",
  ziformula = "~0",
  correction = "BH"
)
}
\arguments{
\item{feats}{A numeric matrix or data frame of feature abundances with samples
as rows and features as columns.}

\item{samps}{A data frame of sample metadata with samples as rows and variables
as columns. Row names must match those in \code{feats}.}

\item{fixed_formula}{Character string specifying the fixed effects formula. Variables
should be separated by \code{+}. For example, \code{"treatment + age"}. Listed
variables must be present in the \code{samps} data frame.}

\item{min_prevalence}{Numeric value between 0 and 1 specifying the minimum
prevalence threshold for feature inclusion. Default is 0.1.}

\item{normalization}{Character string specifying normalization method. Options are
\code{"tss"} (total sum scaling, default), \code{"clr"} (centered log-ratio),
or \code{"none"}.}

\item{transformation}{Character string specifying transformation method. Options are
\code{"log"} (default) or \code{"none"}. Will be ignored if \code{"clr"} is
chosen for the \code{normalization}.}

\item{random_formula}{Character string specifying the random effects formula. See
\code{glmmTMB} documentation for syntax. For example, \code{"(1|subject_id)"}.
Listed variables must be present in the \code{samps} data frame. Default is
\code{NULL} for no random effects.}

\item{family}{Character string specifying the error distribution family. Must be a
distribution family supported by \code{glmmTMB}. Default is \code{"gaussian"}.}

\item{ziformula}{Character string specifying the zero-inflation formula. Default is
\code{"~0"} for no zero-inflation.}

\item{correction}{Character string specifying the multiple testing correction
method. Default is \code{"BH"} for Benjamini-Hochberg.}
}
\value{
A list containing:
\describe{
\item{result_summary}{Data frame with test results including coefficients,
p-values, and FDR-adjusted p-values for each feature and variable}
\item{model_fits}{List of fitted glmmTMB model objects for each feature}
}
}
\description{
Performs differential abundance testing on a matrix of feature data
(e.g., microbiome, RNA-seq) using generalized linear mixed models (GLMMs) with
various normalization and transformation options.
}
\details{
This function performs differential abundance testing on feature data using
the following workflow:
\enumerate{
\item Applies the specified normalization method to feature data
\item Applies the specified transformation method
\item Filters features based on minimum prevalence threshold
\item Fits GLMMs for each feature using the specified formula
\item Extracts coefficients, standard errors, and p-values
\item Applies multiple testing correction
}

For CLR normalization, the transformation is applied within the normalization
step and any additional transformation is skipped.

The log transformations use a pseudo-count approach, adding half the minimum
positive value to handle zeros before taking the logarithm.
}
\note{
This function requires the \code{glmmTMB} package to be installed and loaded.
Sample names in \code{feats} and \code{samps} must match exactly.
}
\examples{
# Generate example data
set.seed(123)
n_samples <- 50
n_features <- 20

# Create sample names
sample_names <- paste0("Sample_", 1:n_samples)

# Generate feature abundance data
feature_matrix <- matrix(
  rpois(n_samples * n_features, lambda = 100),
  nrow = n_samples,
  ncol = n_features,
  dimnames = list(
    sample_names,
    paste0("Feature_", 1:n_features)
  )
)

# Add some zeros to simulate realistic sparse data
zero_indices <- sample(
  1:(n_samples * n_features),
  size = n_samples * n_features * 0.3
)
feature_matrix[zero_indices] <- 0

# Generate sample metadata
sample_metadata <- data.frame(
  treatment = factor(rep(c("Control", "Treatment"), each = n_samples / 2)),
  age = rnorm(n_samples, mean = 45, sd = 10),
  subject_id = factor(rep(1:(n_samples / 2), 2)),
  row.names = sample_names
)

# With fixed and random effects and zero inflation
results <- diffGLMM(
  feats = feature_matrix,
  samps = sample_metadata,
  transformation = "none",
  fixed_formula = "treatment + age",
  random_formula = "(1|subject_id)",
  family = "poisson",
  ziformula = "~1"
)

# With CLR normalization and no transformation
results <- diffGLMM(
  feats = feature_matrix,
  samps = sample_metadata,
  normalization = "clr",
  transformation = "none",
  fixed_formula = "treatment"
)

# View results
head(results$result_summary)

}
\seealso{
\code{\link[glmmTMB]{glmmTMB}} for the underlying model fitting function.
}
